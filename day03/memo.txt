# display 속성
HTML에서 요소를 어떻게 표시할지 결정한다.
HTML 요소들은 기본적으로 display의 속성값이 설정되어 있다.
블록 요소 -> display : block
인라인 요소 -> display : inline

특정 요소의 display속성을 수정한다면 블록 요소를 인라인으로, 
인라인 요소를 블록으로도 수정이 가능하다.

# display 속성의 기본 4가지 값
- none
  요소를 보이지 않게 설정한다.
  단순히 투명해지는 것이 아니라 
  아예 사라지게 되므로 공간을 차지하지 않는다.
  
- block
  블록 요소로 설정한다.
  블록 요소는 기본적으로 가로 영역을 모두 차지한다.
  너비와 높이를 조절할 수 있다.

- inline
  인라인 요소로 설정한다.
  인라인 요소는 기본적으로 컨텐츠의 크기만큼만 영역을 차지한다.
  블록 요소와 달리 컨텐츠의 높이, 너비를 설정할 수 없다.

- inline-block
  인라인 블록 요소로 설정한다.
  인라인의 특징과 블록의 특징을 섞어 놓은 요소이다.
  인라인 처럼 컨텐츠 만큼만 영역을 차지하므로 가로 배치가 가능하다.
  블록처럼 컨텐츠의 너비, 높이를 수정할 수 있다.
  내부는 block요소, 외부는 inline 요소의 특징을 갖는다.

=========================================================================================

# 레이아웃을 만들 떄 사용하는 속성
1. float
2. display의 flex
3. display의 grid

# flex
레이아웃을 만드는 하나의 방법이다.
복잡하지 않게 유연하게 요소들의 크기와 순서를 정하여 배치할 수 있다.
단점은 부모요소가 많아진다.

# flex box
- flex contatiner
레이아웃을 적용하여 배치하려는 요소들을 감싸고 있는 부모요소
display : flex 속성이 부여된 요소이다.

# flex container의 주요 속성
배치 하려는 요소들의 전체 흐름, 정렬과 관련된 속성

- display
  display : flex
  flex contatiner를 지정하는 속성

- flex-direction
  flex-direction : row | column;
  주측의 방향을 지정하는 속성

- justify-content
  컨테이너의 주축을 기준으로 아이템들을 정렬한다.
  1. center : 중앙 정렬
  2. flex-start : 축의 시작 방향에 붙인다.
  3. flex-end : 축의 끝 방향에 붙인다.
  4. space-between : 첫 아이템과 마지막 아이템을 컨테이너 양 끝에
                     배치하고 나머지 아이템들은 동일한 간격으로 정렬된다.
  5. space-around : 모든 아이템을 동일한 간격으로 정렬한다.

- align-items
 컨테이너의 교차축을 기준으로 정렬한다.
 justify-content와 속성값은 동일하다.

- flex-wrap
  flex-wrap : nowrap | wrap;
  컨테이너 내부의 요소들이 많거나 크기가 커서 컨테이너를 넘어가게 되었을 때
  어떻게 표시할지 정하는 속성
  1. nowrap(default)
  줄 바꿈 없이 한 줄로 보여준다.
  만약 컨테이너의 크기가 작다면 각각의 아이템의 크기를 줄여서라도 한 줄로 표시한다.

  2. wrap
  컨테이너의 크기가 작다면 아이템의 크기를 수정하지 않고 유지하면서
  여러 줄로 표시해준다.

=======================================================================================

# Semantic 태그
태그 자체적으로 의미가 있는 태그

# 시멘틱 태그의 종류
- <header> : 페이지의 헤더 영역
- <footer> : 회사 정보등을 담은 푸터 영역
- <nav> : 다른 페이지로 이동하는 요소를 담은 네비게이션 영역
- <main> : 주 컨텐츠가 들어가는 영역   
- <aside> : 주 컨텐츠와는 연관성이 낮은 분리된 영역, 주로 사이드바로 사용
- <section> : 컨텐츠간의 영역을 나눌떄 사용
- <article> : 독립되고 반복적으로 재사용가능한 컨텐츠 영역















